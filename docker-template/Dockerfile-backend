# Build stage
FROM node:18-alpine as build

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./

# Install all dependencies (including devDependencies)
RUN npm install

# Copy source code
COPY . .

# Build the app (if you have a build step like TypeScript compilation)
# RUN npm run build

# Production stage
FROM node:18-alpine as production

# Create app directory
WORKDIR /app

# Create non-root user for security
RUN addgroup -g 1001 -S nodejs
RUN adduser -S nodejs -u 1001

# Copy package files
COPY package*.json ./

# Install only production dependencies
RUN npm ci --only=production && npm cache clean --force

# Copy built application from build stage
COPY --from=build --chown=nodejs:nodejs /app .

# Remove package files to reduce image size
RUN rm package*.json

# Set default environment variables (can be overridden at runtime)
ENV NODE_ENV=production
ENV PORT=4000
ENV DATABASE_URL=postgresql://postgres:123456789@localhost:5432/ShoppingListApp

# Switch to non-root user
USER nodejs

# Expose port (this is just documentation, actual port is controlled by ENV)
EXPOSE $PORT

# # Health check
# HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
#   CMD node healthcheck.js || exit 1

# Start the application
CMD ["node", "server.js"]